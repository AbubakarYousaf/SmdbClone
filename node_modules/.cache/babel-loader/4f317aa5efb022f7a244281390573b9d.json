{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/list/List.tsx\";\nimport React, { useRef } from 'react';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nimport ListPoster from './ListPoster';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport Poster from '../../assets/poster.png';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { titleCase } from '../../helpers';\nimport { Container, Heading, TitleListContainer, InitialSpace, LoadMore } from './ListStyles';\n\nconst List = _ref => {\n  let {\n    titles: {\n      titles,\n      category,\n      mediaType\n    },\n    dispatch\n  } = _ref;\n  const bottomBoundaryRef = useRef(null);\n  useInfiniteScroll(bottomBoundaryRef, dispatch);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, titleCase(category)), /*#__PURE__*/React.createElement(ScrollContainer, {\n    vertical: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TitleListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InitialSpace, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, titles && titles.map(title => /*#__PURE__*/React.createElement(ListPoster, {\n    posterPath: title.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${title.poster_path}` : `${Poster}`,\n    id: title.id,\n    title: title.title || title.name,\n    mediaType: mediaType,\n    key: title.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(LoadMore, {\n    ref: bottomBoundaryRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/list/List.tsx"],"names":["React","useRef","ScrollContainer","ListPoster","useInfiniteScroll","Poster","IMAGE_BASE_URL","POSTER_SIZE","titleCase","Container","Heading","TitleListContainer","InitialSpace","LoadMore","List","titles","category","mediaType","dispatch","bottomBoundaryRef","map","title","poster_path","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,cAA5C;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,SACEC,SADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,YAJF,EAKEC,QALF,QAMO,cANP;;AAiBA,MAAMC,IAAqB,GAAG,QAGxB;AAAA,MAHyB;AAC7BC,IAAAA,MAAM,EAAE;AAAEA,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,KADqB;AAE7BC,IAAAA;AAF6B,GAGzB;AACJ,QAAMC,iBAAiB,GAAGlB,MAAM,CAAiB,IAAjB,CAAhC;AACAG,EAAAA,iBAAiB,CAACe,iBAAD,EAAoBD,QAApB,CAAjB;AACA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUV,SAAS,CAACQ,QAAD,CAAnB,CADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,IACLA,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACT,oBAAC,UAAD;AACE,IAAA,UAAU,EACRA,KAAK,CAACC,WAAN,GACK,GAAEhB,cAAe,GAAEC,WAAY,GAAEc,KAAK,CAACC,WAAY,EADxD,GAEK,GAAEjB,MAAO,EAJlB;AAME,IAAA,EAAE,EAAEgB,KAAK,CAACE,EANZ;AAOE,IAAA,KAAK,EAAEF,KAAK,CAACA,KAAN,IAAeA,KAAK,CAACG,IAP9B;AAQE,IAAA,SAAS,EAAEP,SARb;AASE,IAAA,GAAG,EAAEI,KAAK,CAACE,EATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF,eAiBE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEJ,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAFF,CADF;AA0BD,CAhCD;;AAkCA,eAAeL,IAAf","sourcesContent":["import React, { useRef } from 'react';\nimport ScrollContainer from 'react-indiana-drag-scroll';\nimport ListPoster from './ListPoster';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport Poster from '../../assets/poster.png';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { AdvancePageAction, Titles } from '../../store/list/listTypes';\nimport { titleCase } from '../../helpers';\nimport {\n  Container,\n  Heading,\n  TitleListContainer,\n  InitialSpace,\n  LoadMore,\n} from './ListStyles';\n\ninterface Props {\n  titles: {\n    titles: Titles[];\n    category: string;\n    mediaType: string;\n  };\n  dispatch: React.Dispatch<AdvancePageAction>;\n}\n\nconst List: React.FC<Props> = ({\n  titles: { titles, category, mediaType },\n  dispatch,\n}) => {\n  const bottomBoundaryRef = useRef<HTMLDivElement>(null);\n  useInfiniteScroll(bottomBoundaryRef, dispatch);\n  return (\n    <Container>\n      <Heading>{titleCase(category)}</Heading>\n      <ScrollContainer vertical={false}>\n        <TitleListContainer>\n          <InitialSpace>\n            {titles &&\n              titles.map((title) => (\n                <ListPoster\n                  posterPath={\n                    title.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${title.poster_path}`\n                      : `${Poster}`\n                  }\n                  id={title.id}\n                  title={title.title || title.name}\n                  mediaType={mediaType}\n                  key={title.id}\n                />\n              ))}\n          </InitialSpace>\n          <LoadMore ref={bottomBoundaryRef}></LoadMore>\n        </TitleListContainer>\n      </ScrollContainer>\n    </Container>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}