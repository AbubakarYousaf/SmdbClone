{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/SignIn.tsx\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { auth, signInWithGoogle } from \"../firebase/firebaseUtils\";\nimport { Container, Form, Heading, Input, Button, Link } from \"./SignInStyles\";\n\nconst SignIn = _ref => {\n  let {\n    isAuthenticated\n  } = _ref;\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setCredentials({\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    onChange: handleChange,\n    value: email,\n    placeholder: \"Email\",\n    autoComplete: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    autoComplete: \"current-password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    google: true,\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"New to SMDb? Sign up\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/SignIn.tsx"],"names":["React","useState","Redirect","auth","signInWithGoogle","Container","Form","Heading","Input","Button","Link","SignIn","isAuthenticated","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","console","handleChange","value","name","target"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { auth, signInWithGoogle } from \"../firebase/firebaseUtils\";\nimport { Container, Form, Heading, Input, Button, Link } from \"./SignInStyles\";\n\ninterface Props {\n    isAuthenticated: boolean;\n}\n\ninterface Event {\n    target: {\n        name: string;\n        value: string;\n    };\n}\n\nconst SignIn: React.FC<Props> = ({ isAuthenticated }) => {\n    const [userCredentials, setCredentials] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async (event: FormEvent) => {\n        event.preventDefault();\n        const { email, password } = userCredentials;\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            setCredentials({ email: \"\", password: \"\" });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const handleChange = (event: Event) => {\n        const { value, name } = event.target;\n        setCredentials({ ...userCredentials, [name]: value });\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Container>\n            <Form onSubmit={handleSubmit}>\n                <Heading>Sign In</Heading>\n                <Input\n                    name=\"email\"\n                    type=\"email\"\n                    onChange={handleChange}\n                    value={email}\n                    placeholder=\"Email\"\n                    autoComplete=\"email\"\n                    required\n                />\n                <Input\n                    name=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                    placeholder=\"Password\"\n                    autoComplete=\"current-password\"\n                    required\n                />\n                <Button type=\"submit\">Sign In</Button>\n                <Button type=\"button\" google={true} onClick={signInWithGoogle}>\n                    Sign in with Google\n                </Button>\n                <Link to=\"/signup\">{\"New to SMDb? Sign up\"}</Link>\n            </Form>\n        </Container>\n    );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}