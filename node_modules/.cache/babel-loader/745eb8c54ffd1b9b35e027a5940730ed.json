{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/SignUp.tsx\";\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from '../firebase/firebaseUtils';\nimport { Container, Form, Heading, Input, Button, Link } from './SignInStyles';\n\nconst SignUp = _ref => {\n  let {\n    isAuthenticated\n  } = _ref;\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      setUserCredentials({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    signUp: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    placeholder: \"Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    placeholder: \"Email\",\n    autoComplete: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    autoComplete: \"new-password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    placeholder: \"Confirm Password\",\n    autoComplete: \"new-password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, 'Already have an account? Sign in')));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/SignUp.tsx"],"names":["React","useState","Redirect","auth","createUserProfileDocument","Container","Form","Heading","Input","Button","Link","SignUp","isAuthenticated","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","handleChange","value","name","target"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { auth, createUserProfileDocument } from '../firebase/firebaseUtils';\nimport { Container, Form, Heading, Input, Button, Link } from './SignInStyles';\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\ninterface Event {\n  target: {\n    name: string;\n    value: string;\n  };\n}\n\nconst SignUp: React.FC<Props> = ({ isAuthenticated }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      await createUserProfileDocument(user, { displayName });\n      setUserCredentials({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (event: Event) => {\n    const { value, name } = event.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <Container signUp={true}>\n      <Form onSubmit={handleSubmit}>\n        <Heading>Sign Up</Heading>\n        <Input\n          type='text'\n          name='displayName'\n          value={displayName}\n          onChange={handleChange}\n          placeholder='Name'\n          required\n        />\n        <Input\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          placeholder='Email'\n          autoComplete='email'\n          required\n        />\n        <Input\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n          placeholder='Password'\n          autoComplete='new-password'\n          required\n        />\n        <Input\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={handleChange}\n          placeholder='Confirm Password'\n          autoComplete='new-password'\n          required\n        />\n        <Button type='submit'>Sign Up</Button>\n        <Link to='/signin'>{'Already have an account? Sign in'}</Link>\n      </Form>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}