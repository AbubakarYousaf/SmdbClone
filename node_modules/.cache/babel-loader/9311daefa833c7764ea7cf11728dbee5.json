{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/layout/SearchBar.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_URL, API_KEY } from '../../config';\nimport { Container, Input, List, Item } from './SearchBarStyles';\n\nconst SearchBar = _ref => {\n  let {\n    closeMenu\n  } = _ref;\n  const [state, setState] = useState({\n    search: [],\n    loading: true\n  });\n  const [value, setValue] = useState('');\n  const searchInput = useRef(null);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (value) {\n        setState({\n          search: [],\n          loading: true\n        });\n        fetch(`${API_URL}search/multi?api_key=${API_KEY}&language=en-US&query=${value}`).then(res => res.json()).then(data => {\n          setState({\n            search: [...data.results],\n            loading: false\n          });\n        });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n  useEffect(() => {\n    searchInput.current.focus();\n  }, []);\n  const {\n    search,\n    loading\n  } = state;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: value,\n    ref: searchInput,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, search.length > 0 && search.filter((item, index) => index < 5).map(item => /*#__PURE__*/React.createElement(Link, {\n    to: `/${item.media_type}/${item.id}`,\n    onClick: closeMenu,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, item.original_title || item.name))), !loading && !search.length && /*#__PURE__*/React.createElement(Item, {\n    noPointer: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Sorry, we can't find what you're looking for. Try adjusting your search.\")));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/layout/SearchBar.tsx"],"names":["React","useState","useEffect","useRef","Link","API_URL","API_KEY","Container","Input","List","Item","SearchBar","closeMenu","state","setState","search","loading","value","setValue","searchInput","timeout","setTimeout","fetch","then","res","json","data","results","clearTimeout","current","focus","e","target","length","filter","item","index","map","media_type","id","original_title","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { API_URL, API_KEY } from '../../config';\nimport { Container, Input, List, Item } from './SearchBarStyles';\n\ninterface Props {\n  closeMenu: () => void;\n}\n\ninterface State {\n  search: {\n    id: number;\n    name: string;\n    media_type: string;\n    original_title: string;\n  }[];\n  loading: boolean;\n}\n\nconst SearchBar: React.FC<Props> = ({ closeMenu }) => {\n  const [state, setState] = useState<State>({ search: [], loading: true });\n  const [value, setValue] = useState('');\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (value) {\n        setState({ search: [], loading: true });\n        fetch(\n          `${API_URL}search/multi?api_key=${API_KEY}&language=en-US&query=${value}`\n        )\n          .then((res: Response) => res.json())\n          .then((data) => {\n            setState({ search: [...data.results], loading: false });\n          });\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n\n  useEffect(() => {\n    searchInput.current!.focus();\n  }, []);\n\n  const { search, loading } = state;\n  return (\n    <Container>\n      <Input\n        type='text'\n        value={value}\n        ref={searchInput}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <List>\n        {search.length > 0 &&\n          search\n            .filter((item, index) => index < 5)\n            .map((item) => (\n              <Link\n                to={`/${item.media_type}/${item.id}`}\n                onClick={closeMenu}\n                key={item.id}\n              >\n                <Item>{item.original_title || item.name}</Item>\n              </Link>\n            ))}\n\n        {!loading && !search.length && (\n          <Item noPointer={true}>\n            Sorry, we can't find what you're looking for. Try adjusting your\n            search.\n          </Item>\n        )}\n      </List>\n    </Container>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}