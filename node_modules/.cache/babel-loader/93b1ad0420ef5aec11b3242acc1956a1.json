{"ast":null,"code":"import { useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport { SET_DATA, SET_ERROR } from \"./personTypes\";\nexport function useFetchPerson(personId, dispatch) {\n  useEffect(() => {\n    const key = `person_${personId}`;\n\n    if (localStorage.getItem(key)) {\n      const data = JSON.parse(localStorage.getItem(key));\n      dispatch({\n        type: SET_DATA,\n        name: data.name,\n        profile_path: data.profile_path,\n        titles: data.titles\n      });\n    } else {\n      fetch(`${API_URL}person/${personId}?api_key=${API_KEY}&language=en-US`).then(res => res.json()).then(person => {\n        if (person.status_code || person.errors) {\n          dispatch({\n            type: SET_ERROR,\n            error: true\n          });\n        } else {\n          fetch(`${API_URL}person/${personId}/combined_credits?api_key=${API_KEY}`).then(res => res.json()).then(titles => {\n            dispatch({\n              type: SET_DATA,\n              name: person.name,\n              profile_path: person.profile_path,\n              titles: titles.cast\n            });\n            localStorage.setItem(key, JSON.stringify({\n              name: person.name,\n              profile_path: person.profile_path,\n              titles: titles.cast\n            }));\n          });\n        }\n      });\n    }\n  }, [dispatch, personId]);\n}","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/store/person/personActions.ts"],"names":["useEffect","API_URL","API_KEY","SET_DATA","SET_ERROR","useFetchPerson","personId","dispatch","key","localStorage","getItem","data","JSON","parse","type","name","profile_path","titles","fetch","then","res","json","person","status_code","errors","error","cast","setItem","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAuD,eAAvD;AAEA,OAAO,SAASC,cAAT,CACHC,QADG,EAEHC,QAFG,EAGC;AACJP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,GAAW,GAAI,UAASF,QAAS,EAAvC;;AACA,QAAIG,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAJ,EAA+B;AAC3B,YAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBF,GAArB,CAAX,CAAb;AACAD,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEX,QADD;AAELY,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFN;AAGLC,QAAAA,YAAY,EAAEL,IAAI,CAACK,YAHd;AAILC,QAAAA,MAAM,EAAEN,IAAI,CAACM;AAJR,OAAD,CAAR;AAMH,KARD,MAQO;AACHC,MAAAA,KAAK,CACA,GAAEjB,OAAQ,UAASK,QAAS,YAAWJ,OAAQ,iBAD/C,CAAL,CAGKiB,IAHL,CAGWC,GAAD,IAAmBA,GAAG,CAACC,IAAJ,EAH7B,EAIKF,IAJL,CAIWG,MAAD,IAAY;AACd,YAAIA,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACE,MAAjC,EAAyC;AACrCjB,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAEV,SAAR;AAAmBqB,YAAAA,KAAK,EAAE;AAA1B,WAAD,CAAR;AACH,SAFD,MAEO;AACHP,UAAAA,KAAK,CACA,GAAEjB,OAAQ,UAASK,QAAS,6BAA4BJ,OAAQ,EADhE,CAAL,CAGKiB,IAHL,CAGWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHnB,EAIKF,IAJL,CAIWF,MAAD,IAAY;AACdV,YAAAA,QAAQ,CAAC;AACLO,cAAAA,IAAI,EAAEX,QADD;AAELY,cAAAA,IAAI,EAAEO,MAAM,CAACP,IAFR;AAGLC,cAAAA,YAAY,EAAEM,MAAM,CAACN,YAHhB;AAILC,cAAAA,MAAM,EAAEA,MAAM,CAACS;AAJV,aAAD,CAAR;AAMAjB,YAAAA,YAAY,CAACkB,OAAb,CACInB,GADJ,EAEII,IAAI,CAACgB,SAAL,CAAe;AACXb,cAAAA,IAAI,EAAEO,MAAM,CAACP,IADF;AAEXC,cAAAA,YAAY,EAAEM,MAAM,CAACN,YAFV;AAGXC,cAAAA,MAAM,EAAEA,MAAM,CAACS;AAHJ,aAAf,CAFJ;AAQH,WAnBL;AAoBH;AACJ,OA7BL;AA8BH;AACJ,GA1CQ,EA0CN,CAACnB,QAAD,EAAWD,QAAX,CA1CM,CAAT;AA2CH","sourcesContent":["import { useEffect } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport { SET_DATA, SET_ERROR, PersonActionTypes } from \"./personTypes\";\n\nexport function useFetchPerson(\n    personId: string,\n    dispatch: React.Dispatch<PersonActionTypes>\n): void {\n    useEffect(() => {\n        const key: string = `person_${personId}`;\n        if (localStorage.getItem(key)) {\n            const data = JSON.parse(localStorage.getItem(key) as string);\n            dispatch({\n                type: SET_DATA,\n                name: data.name,\n                profile_path: data.profile_path,\n                titles: data.titles,\n            });\n        } else {\n            fetch(\n                `${API_URL}person/${personId}?api_key=${API_KEY}&language=en-US`\n            )\n                .then((res: Response) => res.json())\n                .then((person) => {\n                    if (person.status_code || person.errors) {\n                        dispatch({ type: SET_ERROR, error: true });\n                    } else {\n                        fetch(\n                            `${API_URL}person/${personId}/combined_credits?api_key=${API_KEY}`\n                        )\n                            .then((res) => res.json())\n                            .then((titles) => {\n                                dispatch({\n                                    type: SET_DATA,\n                                    name: person.name,\n                                    profile_path: person.profile_path,\n                                    titles: titles.cast,\n                                });\n                                localStorage.setItem(\n                                    key,\n                                    JSON.stringify({\n                                        name: person.name,\n                                        profile_path: person.profile_path,\n                                        titles: titles.cast,\n                                    })\n                                );\n                            });\n                    }\n                });\n        }\n    }, [dispatch, personId]);\n}\n"]},"metadata":{},"sourceType":"module"}