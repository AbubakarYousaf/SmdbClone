{"ast":null,"code":"import { useEffect } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport { SET_LIST } from './listTypes';\nexport function useFetchList(_ref, dispatch) {\n  let {\n    mediaType,\n    category,\n    page\n  } = _ref;\n  useEffect(() => {\n    const key = `${mediaType}_${category}_${page}`;\n\n    if (sessionStorage.getItem(key)) {\n      const data = JSON.parse(sessionStorage.getItem(key));\n      dispatch({\n        type: SET_LIST,\n        titles: data.results\n      });\n    } else {\n      const url = `${API_URL}${mediaType}/${category}?api_key=${API_KEY}&language=en-US&page=${page}`;\n      console.log('url is', url);\n      fetch(url).then(res => res.json()).then(data => {\n        dispatch({\n          type: SET_LIST,\n          titles: data.results\n        });\n        sessionStorage.setItem(key, JSON.stringify(data));\n      });\n    }\n  }, [dispatch, page, mediaType, category]);\n}","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/store/list/listActions.ts"],"names":["useEffect","API_URL","API_KEY","SET_LIST","useFetchList","dispatch","mediaType","category","page","key","sessionStorage","getItem","data","JSON","parse","type","titles","results","url","console","log","fetch","then","res","json","setItem","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,SAASC,QAAT,QAAqD,aAArD;AAEA,OAAO,SAASC,YAAT,OAELC,QAFK,EAGC;AAAA,MAFN;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,GAEM;AACNR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,GAAW,GAAI,GAAEH,SAAU,IAAGC,QAAS,IAAGC,IAAK,EAArD;;AACA,QAAIE,cAAc,CAACC,OAAf,CAAuBF,GAAvB,CAAJ,EAAiC;AAC/B,YAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,CAACC,OAAf,CAAuBF,GAAvB,CAAX,CAAb;AACAJ,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEZ,QAAR;AAAkBa,QAAAA,MAAM,EAAEJ,IAAI,CAACK;AAA/B,OAAD,CAAR;AACD,KAHD,MAGO;AACL,YAAMC,GAAG,GAAI,GAAEjB,OAAQ,GAAEK,SAAU,IAAGC,QAAS,YAAWL,OAAQ,wBAAuBM,IAAK,EAA9F;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB;AACAG,MAAAA,KAAK,CACHH,GADG,CAAL,CAGGI,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISV,IAAD,IAAU;AACdP,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAEZ,QAAR;AAAkBa,UAAAA,MAAM,EAAEJ,IAAI,CAACK;AAA/B,SAAD,CAAR;AACAP,QAAAA,cAAc,CAACe,OAAf,CAAuBhB,GAAvB,EAA4BI,IAAI,CAACa,SAAL,CAAed,IAAf,CAA5B;AACD,OAPH;AAQD;AACF,GAjBQ,EAiBN,CAACP,QAAD,EAAWG,IAAX,EAAiBF,SAAjB,EAA4BC,QAA5B,CAjBM,CAAT;AAkBD","sourcesContent":["import { useEffect } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport { SET_LIST, FetchListAction, FetchList } from './listTypes';\n\nexport function useFetchList(\n  { mediaType, category, page }: FetchList,\n  dispatch: React.Dispatch<FetchListAction>\n): void {\n  useEffect(() => {\n    const key: string = `${mediaType}_${category}_${page}`;\n    if (sessionStorage.getItem(key)) {\n      const data = JSON.parse(sessionStorage.getItem(key) as string);\n      dispatch({ type: SET_LIST, titles: data.results });\n    } else {\n      const url = `${API_URL}${mediaType}/${category}?api_key=${API_KEY}&language=en-US&page=${page}`;\n      console.log('url is',url)\n      fetch(\n        url\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch({ type: SET_LIST, titles: data.results });\n          sessionStorage.setItem(key, JSON.stringify(data));\n        });\n    }\n  }, [dispatch, page, mediaType, category]);\n}\n"]},"metadata":{},"sourceType":"module"}