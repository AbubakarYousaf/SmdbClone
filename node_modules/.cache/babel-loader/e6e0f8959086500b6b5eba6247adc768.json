{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/Person.tsx\";\nimport React, { useReducer, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"./layout/Spinner\";\nimport PosterPng from \"../assets/poster.png\";\nimport personReducer from \"../store/person/personReducer\";\nimport { useFetchPerson } from \"../store/person/personActions\";\nimport { IMAGE_BASE_URL, API_URL, TINY_POSTER_SIZE } from \"../config\";\nimport { Wrapper, Heading, Row, Placeholder, Img, Span, Bio, Info } from \"./PersonStyles\";\n\nconst Person = () => {\n  const [pic, setPic] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [state, dispatch] = useReducer(personReducer, {\n    name: \"\",\n    profile_path: \"\",\n    titles: [],\n    error: false\n  });\n  const {\n    personId\n  } = useParams();\n  useFetchPerson(personId, dispatch);\n  const {\n    name,\n    titles,\n    error\n  } = state;\n  useEffect(() => {\n    const fetchImg = async () => {\n      fetch(`${API_URL}person/${personId}?api_key=4a61e96a6e6cf693c5c03e6595ece16d`).then(res => res.json()).then(data => {\n        console.log(data);\n        setPic(data.profile_path);\n        setBio(data.biography);\n      });\n    };\n\n    fetchImg();\n  }, [personId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, name && /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, name), /*#__PURE__*/React.createElement(Bio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: \"150px\",\n      objectFit: \"contain\",\n      marginRight: \"20px\"\n    },\n    alt: \"Person\",\n    src: `${IMAGE_BASE_URL}${TINY_POSTER_SIZE}/${pic}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, bio)), titles.map(title => /*#__PURE__*/React.createElement(Link, {\n    to: `/${title.media_type}/${title.id}`,\n    key: title.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Placeholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    alt: \"Person\",\n    src: title.poster_path ? `${IMAGE_BASE_URL}${TINY_POSTER_SIZE}${title.poster_path}` : PosterPng,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }, title.name || title.title))))), !error && !name && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }), error && \"NOT FOUND 404\");\n};\n\nexport default Person;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/Person.tsx"],"names":["React","useReducer","useEffect","useState","useParams","Link","Spinner","PosterPng","personReducer","useFetchPerson","IMAGE_BASE_URL","API_URL","TINY_POSTER_SIZE","Wrapper","Heading","Row","Placeholder","Img","Span","Bio","Info","Person","pic","setPic","bio","setBio","state","dispatch","name","profile_path","titles","error","personId","fetchImg","fetch","then","res","json","data","console","log","biography","width","objectFit","marginRight","map","title","media_type","id","poster_path"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"./layout/Spinner\";\nimport PosterPng from \"../assets/poster.png\";\nimport personReducer from \"../store/person/personReducer\";\nimport { useFetchPerson } from \"../store/person/personActions\";\nimport { IMAGE_BASE_URL, API_URL, TINY_POSTER_SIZE } from \"../config\";\nimport {\n    Wrapper,\n    Heading,\n    Row,\n    Placeholder,\n    Img,\n    Span,\n    Bio,\n    Info,\n} from \"./PersonStyles\";\n\nconst Person: React.FC = () => {\n    const [pic, setPic] = useState<string>(\"\");\n    const [bio, setBio] = useState<string>(\"\");\n\n    const [state, dispatch] = useReducer(personReducer, {\n        name: \"\",\n        profile_path: \"\",\n        titles: [],\n        error: false,\n    });\n\n    const { personId } = useParams<{ personId: string }>();\n    useFetchPerson(personId, dispatch);\n\n    const { name, titles, error } = state;\n    useEffect(() => {\n        const fetchImg = async () => {\n            fetch(\n                `${API_URL}person/${personId}?api_key=4a61e96a6e6cf693c5c03e6595ece16d`\n            )\n                .then((res) => res.json())\n                .then((data) => {\n                    console.log(data);\n                    setPic(data.profile_path);\n                    setBio(data.biography);\n                });\n        };\n        fetchImg();\n    }, [personId]);\n    return (\n        <>\n            {name && (\n                <Wrapper>\n                    <Heading>{name}</Heading>\n                    <Bio>\n                        <img\n                            style={{\n                                width: \"150px\",\n                                objectFit: \"contain\",\n                                marginRight: \"20px\",\n                            }}\n                            alt=\"Person\"\n                            src={`${IMAGE_BASE_URL}${TINY_POSTER_SIZE}/${pic}`}\n                        />\n                        <Info>{bio}</Info>\n                    </Bio>\n                    {titles.map((title) => (\n                        <Link\n                            to={`/${title.media_type}/${title.id}`}\n                            key={title.id}\n                        >\n                            <Row>\n                                <Placeholder>\n                                    <Img\n                                        alt=\"Person\"\n                                        src={\n                                            title.poster_path\n                                                ? `${IMAGE_BASE_URL}${TINY_POSTER_SIZE}${title.poster_path}`\n                                                : PosterPng\n                                        }\n                                    />\n                                </Placeholder>\n                                <Span>{title.name || title.title}</Span>\n                            </Row>\n                        </Link>\n                    ))}\n                </Wrapper>\n            )}\n            {!error && !name && <Spinner />}\n            {error && \"NOT FOUND 404\"}\n        </>\n    );\n};\n\nexport default Person;\n"]},"metadata":{},"sourceType":"module"}