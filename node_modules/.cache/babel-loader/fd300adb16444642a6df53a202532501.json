{"ast":null,"code":"var _jsxFileName = \"/Users/imacbruker/Desktop/smdb/src/components/Favorites.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { displayTitles, deleteTitle } from '../firebase/firebaseUtils';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\nimport { Container, Link, Img, Button } from './FavoritesStyles';\n\nconst Favorites = _ref => {\n  let {\n    userId\n  } = _ref;\n  const [titles, setTitles] = useState([]);\n  useEffect(() => {\n    displayTitles(userId).then(res => {\n      setTitles(res);\n    });\n  }, [userId]);\n\n  const handleDelete = (userId, id) => {\n    deleteTitle(userId, id);\n    setTitles(titles.filter(title => `${title.mediaType}_${title.id}` !== id));\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, titles && titles.map(title => /*#__PURE__*/React.createElement(Link, {\n    to: `/${title.mediaType}/${title.id}`,\n    key: `${title.mediaType}_${title.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    alt: title.title,\n    src: `${IMAGE_BASE_URL}${POSTER_SIZE}${title.posterPath}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.preventDefault();\n      handleDelete(userId, `${title.mediaType}_${title.id}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"X\"))));\n};\n\nexport default Favorites;","map":{"version":3,"sources":["/Users/imacbruker/Desktop/smdb/src/components/Favorites.tsx"],"names":["React","useState","useEffect","displayTitles","deleteTitle","IMAGE_BASE_URL","POSTER_SIZE","Container","Link","Img","Button","Favorites","userId","titles","setTitles","then","res","handleDelete","id","filter","title","mediaType","map","posterPath","e","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,2BAA3C;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,MAA/B,QAA6C,mBAA7C;;AAaA,MAAMC,SAA0B,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACjD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAkB,EAAlB,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,CAACS,MAAD,CAAb,CAAsBG,IAAtB,CAA4BC,GAAD,IAAS;AAClCF,MAAAA,SAAS,CAACE,GAAD,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,CAACJ,MAAD,CAJM,CAAT;;AAMA,QAAMK,YAAY,GAAG,CAACL,MAAD,EAAiBM,EAAjB,KAAgC;AACnDd,IAAAA,WAAW,CAACQ,MAAD,EAASM,EAAT,CAAX;AACAJ,IAAAA,SAAS,CACPD,MAAM,CAAEM,MAAR,CAAgBC,KAAD,IAAY,GAAEA,KAAK,CAACC,SAAU,IAAGD,KAAK,CAACF,EAAG,EAA/B,KAAqCA,EAA/D,CADO,CAAT;AAGD,GALD;;AAOA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,IACLA,MAAM,CAACS,GAAP,CAAYF,KAAD,iBACT,oBAAC,IAAD;AACE,IAAA,EAAE,EAAG,IAAGA,KAAK,CAACC,SAAU,IAAGD,KAAK,CAACF,EAAG,EADtC;AAEE,IAAA,GAAG,EAAG,GAAEE,KAAK,CAACC,SAAU,IAAGD,KAAK,CAACF,EAAG,EAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEE,KAAK,CAACA,KADb;AAEE,IAAA,GAAG,EAAG,GAAEf,cAAe,GAAEC,WAAY,GAAEc,KAAK,CAACG,UAAW,EAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAR,MAAAA,YAAY,CACVL,MADU,EAET,GAAEQ,KAAK,CAACC,SAAU,IAAGD,KAAK,CAACF,EAAG,EAFrB,CAAZ;AAID,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CADF,CAFJ,CADF;AA2BD,CA3CD;;AA6CA,eAAeP,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { displayTitles, deleteTitle } from '../firebase/firebaseUtils';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\nimport { Container, Link, Img, Button } from './FavoritesStyles';\n\ninterface Props {\n  userId: string | null;\n}\n\ninterface Titles {\n  title: string;\n  mediaType: string;\n  posterPath: string;\n  id: string;\n}\n\nconst Favorites: React.FC<Props> = ({ userId }) => {\n  const [titles, setTitles] = useState<Titles[] | null>([]);\n\n  useEffect(() => {\n    displayTitles(userId).then((res) => {\n      setTitles(res);\n    });\n  }, [userId]);\n\n  const handleDelete = (userId: string, id: string) => {\n    deleteTitle(userId, id);\n    setTitles(\n      titles!.filter((title) => `${title.mediaType}_${title.id}` !== id)\n    );\n  };\n\n  return (\n    <Container>\n      {titles &&\n        titles.map((title) => (\n          <Link\n            to={`/${title.mediaType}/${title.id}`}\n            key={`${title.mediaType}_${title.id}`}\n          >\n            <Img\n              alt={title.title}\n              src={`${IMAGE_BASE_URL}${POSTER_SIZE}${title.posterPath}`}\n            />\n            <Button\n              onClick={(e) => {\n                e.preventDefault();\n                handleDelete(\n                  userId as string,\n                  `${title.mediaType}_${title.id}`\n                );\n              }}\n            >\n              X\n            </Button>\n          </Link>\n        ))}\n    </Container>\n  );\n};\n\nexport default Favorites;\n"]},"metadata":{},"sourceType":"module"}